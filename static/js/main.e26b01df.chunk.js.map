{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["Container","Button","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","type","name","Title","Table","Thead","Tbody","Paragraph","Statistics","statistics","total","positivePercentage","key","nanoid","value","Section","title","children","Message","Notification","message","App","state","good","neutral","bad","changeFeedback","event","preventDefault","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","getPositivePercentage","Math","round","this","keys","entries","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEO,IAAMA,EAAS,uHAMTC,EAAM,0J,OCmBJC,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACJ,EAAD,UACGG,EAAQE,KAAI,SAAAC,GACX,OACE,cAACL,EAAD,CAEEM,QAASH,EACTI,KAAK,SACLC,KAAMH,EAJR,SAMGA,GALIA,S,cCPV,IAAMN,EAAS,yIAOTU,EAAK,+FAKLC,EAAK,sKASLC,EAAK,yKASLC,EAAK,6KASLC,EAAS,2GCGPC,MAjCf,YAAgE,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACvC,OACE,eAAC,EAAD,WACE,cAACR,EAAD,yBACA,eAACC,EAAD,WACE,cAACC,EAAD,UACE,+BACGI,EAAWX,KAAI,gBAAEc,EAAF,2BACd,6BAAoBA,GAAXC,kBAEX,4CAGJ,cAACP,EAAD,UACE,+BACGG,EAAWX,KAAI,mCAAQgB,GAAR,kBACd,6BAAoBA,GAAXD,kBAEX,6BAAKH,YAIX,cAACH,EAAD,uCAAkCI,EAAlC,WC/BC,IAAMR,EAAK,4GCoBHY,MAlBf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,cAAC,WAAD,UACGD,GACC,eAAC,WAAD,WACE,cAAC,EAAD,UAAQA,IACPC,QCRJ,IAAMC,EAAO,yGCSLC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACF,EAAD,UAAUE,KCFZ,IAAM3B,EAAS,4FCKD4B,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,eAAiB,SAAAC,GACfA,EAAMC,iBAEN,IAAMhB,EAAMe,EAAME,OAAO3B,KAEzB,EAAK4B,UAAS,SAAAC,GACZ,OAAO,eACJnB,EAAOmB,EAAUnB,IAAQ,O,EAKhCoB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKZ,OAAOa,QAAO,SAACC,EAAKtB,GAAN,OAAgBsB,EAAMtB,IAAO,I,EAGvEuB,sBAAwB,WACtB,IAAM3B,EAAQ,EAAKsB,qBAEnB,OAAOM,KAAKC,MAAO,EAAKjB,MAAMC,KAAOb,EAAS,M,4CAEhD,WACE,IAAMA,EAAQ8B,KAAKR,qBACbrB,EAAqB6B,KAAKH,wBAC1BzC,EAAUqC,OAAOQ,KAAKD,KAAKlB,OAC3Bb,EAAawB,OAAOS,QAAQF,KAAKlB,OAEvC,OACE,cAAC,EAAD,UACE,eAAC,EAAD,CAASN,MAAM,wBAAf,UACE,cAAC,EAAD,CACEpB,QAASA,EACTC,gBAAiB2C,KAAKd,iBAGvBhB,EAAQ,GACP,cAAC,EAAD,CACED,WAAYA,EACZC,MAAOA,EACPC,mBAAoBA,KAItBD,GAAS,cAAC,EAAD,CAAcU,QAAQ,kC,GAlDVuB,a,MCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e26b01df.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 30px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 30px;\n\n  text-transform: capitalize;\n\n  &:not(:last-of-type) {\n    margin-right: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Button, Container } from './FeedbackOptions.styled';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <Container>\n      {options.map(option => {\n        return (\n          <Button\n            key={option}\n            onClick={onLeaveFeedback}\n            type=\"button\"\n            name={option}\n          >\n            {option}\n          </Button>\n        );\n      })}\n    </Container>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  padding-top: 30px;\n`;\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding-bottom: 30px;\n`;\n\nexport const Table = styled.table`\n  text-align: center;\n  border: 1px solid var(--bs-gray-500);\n  th {\n    padding: 1rem;\n    text-transform: uppercase;\n  }\n`;\n\nexport const Thead = styled.thead`\n  background-color: var(--bs-gray-500);\n  th {\n    :not(:last-of-type) {\n      border-right: 1px solid var(--bs-white);\n    }\n  }\n`;\n\nexport const Tbody = styled.tbody`\n  background-color: var(--bs-gray-200);\n  th {\n    :not(:last-of-type) {\n      border-right: 1px solid var(--bs-gray-500);\n    }\n  }\n`;\n\nexport const Paragraph = styled.p`\n  text-transform: uppercase;\n  padding-top: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport {\n  Container,\n  Table,\n  Title,\n  Thead,\n  Tbody,\n  Paragraph,\n} from './Statistics.styled';\n\nfunction Statistics({ statistics, total, positivePercentage }) {\n  return (\n    <Container>\n      <Title>Statistics</Title>\n      <Table>\n        <Thead>\n          <tr>\n            {statistics.map(([key]) => (\n              <th key={nanoid()}>{key}</th>\n            ))}\n            <th>total</th>\n          </tr>\n        </Thead>\n        <Tbody>\n          <tr>\n            {statistics.map(([_key, value]) => (\n              <th key={nanoid()}>{value}</th>\n            ))}\n            <th>{total}</th>\n          </tr>\n        </Tbody>\n      </Table>\n      <Paragraph>{`Positive feedback: ${positivePercentage}%`}</Paragraph>\n    </Container>\n  );\n}\n\nStatistics.propTypes = {\n  statistics: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styled from '@emotion/styled/macro';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 0;\n  padding-top: 50px;\n`;\n","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport { Title } from './Section.styled';\n\nfunction Section({ title, children }) {\n  return (\n    <Fragment>\n      {title && (\n        <Fragment>\n          <Title>{title}</Title>\n          {children}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired,\n};\n\nexport default Section;\n","import styled from '@emotion/styled/macro';\n\nexport const Message = styled.p`\n  text-align: center;\n  margin: 0;\n  padding: 30px;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  width: 1200px;\n  margin: 0 auto;\n`;\n","import React, { Component } from 'react';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Statistics from 'components/Statistics';\nimport Section from 'components/Section';\nimport Notification from 'components/Notification';\nimport { Container } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeFeedback = event => {\n    event.preventDefault();\n\n    const key = event.target.name;\n\n    this.setState(prevState => {\n      return {\n        [key]: (prevState[key] += 1),\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  getPositivePercentage = () => {\n    const total = this.countTotalFeedback();\n\n    return Math.round((this.state.good / total) * 100);\n  };\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.getPositivePercentage();\n    const options = Object.keys(this.state);\n    const statistics = Object.entries(this.state);\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.changeFeedback}\n          />\n\n          {total > 0 && (\n            <Statistics\n              statistics={statistics}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n\n          {!total && <Notification message=\"There is no feedback\" />}\n        </Section>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}